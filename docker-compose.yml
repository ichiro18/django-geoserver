version: '3'

volumes:
  db_data_local: {}
  geoserver_data_local: {}

networks:
  geoserver_network:
    driver: bridge

services:
  db:
    build:
      context: .
      dockerfile: provision/application/database/Dockerfile
    container_name: ${APP_NAME}__database
    env_file:
      - .env
      - .envs/database.env
    volumes:
      - db_data_local:/var/lib/postgresql/data
    ports:
      - "55432:5432"
    networks:
      - geoserver_network

  web:
    build:
      context: .
      dockerfile: provision/application/django/Dockerfile
    container_name: ${APP_NAME}__web
    depends_on:
      - db
      - geoserver
    env_file:
      - .env
      - .envs/database.env
    volumes:
      - .:/app
    ports:
      - "80:8000"
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - geoserver_network

  geoserver_data:
    image: geonode/geoserver_data
    container_name: ${APP_NAME}__geoserver-data
    volumes:
      - geoserver_data_local:/geoserver_data/data
    command: /bin/true

  geoserver:
    image: geonode/geoserver
    container_name: ${APP_NAME}__geoserver
    env_file:
      - .envs/geoserver.env
    depends_on:
      - geoserver_data
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - geoserver_data_local:/geoserver_data/data
      - ./runtime/geoserver:/geoserver_data/data/demo_data
    ports:
      - "8080:8080"
    links:
      - db:postgis
    networks:
      - geoserver_network
"""
Django settings for django_geoserver project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import environ

ROOT_DIR = environ.Path(__file__) - 3 # (project-root/config/settings/base.py - 3 = project-root/)

env = environ.Env()

environ.Env.read_env()


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'cs%dyjyem!&trsv%wg4%4mnux#=sr497*)*b=gvw6!u7e-$a&8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    # TODO: добавлять домен через .env
    'geoprizma.local'
]

SITEURL = "http://geoprizma.local"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_geoserver.web',
    'django_geoserver.geoserver',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_geoserver.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            'web/templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_geoserver.wsgi.application'


# DATABASES
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#databases
DATABASES = {
    'default': env.db('DATABASE_URL'),
}
DATABASES['default']['ATOMIC_REQUESTS'] = True
DATABASES['default']['ENGINE'] = 'django.db.backends.postgresql'


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

# GEOSERVER
# ------------------------------------------------------------------------------
GEOSERVER_CONFIG = {
    'BACKEND': 'django_geoserver.geoserver',
    'LOCATION': 'http://geoserver:8080/geoserver/',
    'LOGIN_ENDPOINT': 'j_spring_oauth2_geonode_login',
    'LOGOUT_ENDPOINT': 'j_spring_oauth2_geonode_logout',
    # PUBLIC_LOCATION needs to be kept like this because in dev mode
    # the proxy won't work and the integration tests will fail
    # the entire block has to be overridden in the local_settings
    'PUBLIC_LOCATION': 'http://localhost:8080/geoserver/',
    'USER': 'admin',
    'PASSWORD': 'geoserver',
    'MAPFISH_PRINT_ENABLED': True,
    'PRINT_NG_ENABLED': True,
    'GEONODE_SECURITY_ENABLED': True,
    'GEOFENCE_SECURITY_ENABLED': False,
    'GEOFENCE_URL': os.getenv('GEOFENCE_URL', 'internal:/'),
    'GEOGIG_ENABLED': False,
    'WMST_ENABLED': False,
    'BACKEND_WRITE_ENABLED': True,
    'WPS_ENABLED': False,
    # Set to name of database in DATABASES dictionary to enable
    # 'datastore',
    'DATASTORE': os.getenv('DEFAULT_BACKEND_DATASTORE',''),
    'PG_GEOGIG': False,
    # 'CACHE': ".cache"  # local cache file to for HTTP requests
    'TIMEOUT': int(os.getenv('OGC_REQUEST_TIMEOUT', '60'))  # number of seconds to allow for HTTP requests
}

DEFAULT_WORKSPACE = ''

# A tuple of hosts the proxy can send requests to.
PROXY_ALLOWED_HOSTS = ()